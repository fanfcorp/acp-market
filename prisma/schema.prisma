// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WaitlistEntry {
  id        String   @id @default(cuid())
  email     String   @unique
  tools     String?  // Optional field for tools they need
  consent   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([createdAt])
}

model Job {
  id              String   @id @default(cuid())
  slug            String   @unique
  
  // Job Details
  jobTitle        String
  companyName     String
  companyLogoUrl  String?
  location        String
  workLocation    String   // Remote, On-site, Hybrid
  jobType         String   // Full Time, Part Time, Contract, Internship
  salaryRange     String?
  applicationUrl  String
  
  // Job Content
  description     String   @db.Text
  requirements    String?  @db.Text
  benefits        String?  @db.Text
  
  // Contact & Meta
  contactEmail    String
  companyWebsite  String?
  tags            String[] // e.g., ["MCP", "AI", "LLM"]
  
  // Status & Publishing
  status          String   @default("pending") // pending, payment_pending, approved, published, expired
  featured        Boolean  @default(false)
  expiresAt       DateTime?
  
  // Payment
  listingType     String   @default("standard") // standard, featured
  paymentStatus   String   @default("unpaid") // unpaid, paid, refunded
  paymentAmount   Int?     // Amount in cents
  stripeSessionId String?
  stripePaymentId String?
  
  // Timestamps
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  publishedAt     DateTime?

  @@index([slug])
  @@index([status])
  @@index([createdAt])
  @@index([workLocation])
  @@index([jobType])
  @@index([paymentStatus])
}

model ServiceRequest {
  id              String   @id @default(cuid())
  
  // Contact Information
  name            String
  email           String
  company         String?
  phone           String?
  
  // Project Details
  projectType     String   // Integration, Custom Development, Consulting, etc.
  description     String   @db.Text
  budget          String?
  timeline        String?
  
  // Status
  status          String   @default("new") // new, contacted, in-progress, completed
  
  // Timestamps
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([email])
  @@index([status])
  @@index([createdAt])
}
